
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000061c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  0000061c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000061c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000064c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  0000068c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000072a  00000000  00000000  000006b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000068f  00000000  00000000  00000dde  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002a2  00000000  00000000  0000146d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000090  00000000  00000000  00001710  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000394  00000000  00000000  000017a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ff  00000000  00000000  00001b34  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001c33  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:

double dutyCycle = 0; 

int main(void)
{
	DDRD = (1 << PORTD6); // Set output
  90:	80 e4       	ldi	r24, 0x40	; 64
  92:	8a b9       	out	0x0a, r24	; 10
	TCCR0A = (1 << COM0A1) | (1<< WGM01) | (1 << WGM00);  
  94:	83 e8       	ldi	r24, 0x83	; 131
  96:	84 bd       	out	0x24, r24	; 36
	TIMSK0 = (1 << TOIE0); // When it overflows
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>

	OCR0A = (dutyCycle/100.0)*255.0; // Time we want it to be ON.
  9e:	20 e0       	ldi	r18, 0x00	; 0
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	48 ec       	ldi	r20, 0xC8	; 200
  a4:	52 e4       	ldi	r21, 0x42	; 66
  a6:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
  aa:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
  ae:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
  b2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
  b6:	0e 94 4a 01 	call	0x294	; 0x294 <__divsf3>
  ba:	20 e0       	ldi	r18, 0x00	; 0
  bc:	30 e0       	ldi	r19, 0x00	; 0
  be:	4f e7       	ldi	r20, 0x7F	; 127
  c0:	53 e4       	ldi	r21, 0x43	; 67
  c2:	0e 94 41 02 	call	0x482	; 0x482 <__mulsf3>
  c6:	0e 94 bc 01 	call	0x378	; 0x378 <__fixunssfsi>
  ca:	67 bd       	out	0x27, r22	; 39
	
	sei(); 
  cc:	78 94       	sei
	
	TCCR0B = (1 << CS00) | (1 << CS02); // Prescaler
  ce:	85 e0       	ldi	r24, 0x05	; 5
  d0:	85 bd       	out	0x25, r24	; 37

    while (1) 
    {
    }
  d2:	ff cf       	rjmp	.-2      	; 0xd2 <main+0x42>

000000d4 <__vector_16>:
}
ISR(TIMER0_OVF_vect)
{
  d4:	1f 92       	push	r1
  d6:	0f 92       	push	r0
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	0f 92       	push	r0
  dc:	11 24       	eor	r1, r1
  de:	cf 92       	push	r12
  e0:	df 92       	push	r13
  e2:	ef 92       	push	r14
  e4:	ff 92       	push	r15
  e6:	2f 93       	push	r18
  e8:	3f 93       	push	r19
  ea:	4f 93       	push	r20
  ec:	5f 93       	push	r21
  ee:	6f 93       	push	r22
  f0:	7f 93       	push	r23
  f2:	8f 93       	push	r24
  f4:	9f 93       	push	r25
  f6:	af 93       	push	r26
  f8:	bf 93       	push	r27
  fa:	ef 93       	push	r30
  fc:	ff 93       	push	r31
	// Everytime it overflows, it recalculates. 
	OCR0A = (dutyCycle/100)*255; // Time we want it to be ON. 
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	48 ec       	ldi	r20, 0xC8	; 200
 104:	52 e4       	ldi	r21, 0x42	; 66
 106:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 10a:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 10e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 112:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 116:	0e 94 4a 01 	call	0x294	; 0x294 <__divsf3>
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	4f e7       	ldi	r20, 0x7F	; 127
 120:	53 e4       	ldi	r21, 0x43	; 67
 122:	0e 94 41 02 	call	0x482	; 0x482 <__mulsf3>
 126:	0e 94 bc 01 	call	0x378	; 0x378 <__fixunssfsi>
 12a:	67 bd       	out	0x27, r22	; 39
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12c:	2f e7       	ldi	r18, 0x7F	; 127
 12e:	8f e4       	ldi	r24, 0x4F	; 79
 130:	92 e1       	ldi	r25, 0x12	; 18
 132:	21 50       	subi	r18, 0x01	; 1
 134:	80 40       	sbci	r24, 0x00	; 0
 136:	90 40       	sbci	r25, 0x00	; 0
 138:	e1 f7       	brne	.-8      	; 0x132 <__vector_16+0x5e>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <__vector_16+0x68>
 13c:	00 00       	nop
	_delay_ms(300);
	dutyCycle += 10; 
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	40 e2       	ldi	r20, 0x20	; 32
 144:	51 e4       	ldi	r21, 0x41	; 65
 146:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <_edata>
 14a:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <_edata+0x1>
 14e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
 152:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
 156:	0e 94 de 00 	call	0x1bc	; 0x1bc <__addsf3>
 15a:	6b 01       	movw	r12, r22
 15c:	7c 01       	movw	r14, r24

	// Reset duty cycle if it is over 100
	if(dutyCycle > 100)
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	48 ec       	ldi	r20, 0xC8	; 200
 164:	52 e4       	ldi	r21, 0x42	; 66
 166:	0e 94 3c 02 	call	0x478	; 0x478 <__gesf2>
 16a:	18 16       	cp	r1, r24
 16c:	4c f0       	brlt	.+18     	; 0x180 <__vector_16+0xac>
ISR(TIMER0_OVF_vect)
{
	// Everytime it overflows, it recalculates. 
	OCR0A = (dutyCycle/100)*255; // Time we want it to be ON. 
	_delay_ms(300);
	dutyCycle += 10; 
 16e:	c0 92 00 01 	sts	0x0100, r12	; 0x800100 <_edata>
 172:	d0 92 01 01 	sts	0x0101, r13	; 0x800101 <_edata+0x1>
 176:	e0 92 02 01 	sts	0x0102, r14	; 0x800102 <_edata+0x2>
 17a:	f0 92 03 01 	sts	0x0103, r15	; 0x800103 <_edata+0x3>
 17e:	08 c0       	rjmp	.+16     	; 0x190 <__vector_16+0xbc>

	// Reset duty cycle if it is over 100
	if(dutyCycle > 100)
	{
		dutyCycle = 0; 
 180:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 184:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 188:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
 18c:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
	}
}
 190:	ff 91       	pop	r31
 192:	ef 91       	pop	r30
 194:	bf 91       	pop	r27
 196:	af 91       	pop	r26
 198:	9f 91       	pop	r25
 19a:	8f 91       	pop	r24
 19c:	7f 91       	pop	r23
 19e:	6f 91       	pop	r22
 1a0:	5f 91       	pop	r21
 1a2:	4f 91       	pop	r20
 1a4:	3f 91       	pop	r19
 1a6:	2f 91       	pop	r18
 1a8:	ff 90       	pop	r15
 1aa:	ef 90       	pop	r14
 1ac:	df 90       	pop	r13
 1ae:	cf 90       	pop	r12
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <__subsf3>:
 1ba:	50 58       	subi	r21, 0x80	; 128

000001bc <__addsf3>:
 1bc:	bb 27       	eor	r27, r27
 1be:	aa 27       	eor	r26, r26
 1c0:	0e 94 f5 00 	call	0x1ea	; 0x1ea <__addsf3x>
 1c4:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_round>
 1c8:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__fp_pscA>
 1cc:	38 f0       	brcs	.+14     	; 0x1dc <__addsf3+0x20>
 1ce:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__fp_pscB>
 1d2:	20 f0       	brcs	.+8      	; 0x1dc <__addsf3+0x20>
 1d4:	39 f4       	brne	.+14     	; 0x1e4 <__addsf3+0x28>
 1d6:	9f 3f       	cpi	r25, 0xFF	; 255
 1d8:	19 f4       	brne	.+6      	; 0x1e0 <__addsf3+0x24>
 1da:	26 f4       	brtc	.+8      	; 0x1e4 <__addsf3+0x28>
 1dc:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__fp_nan>
 1e0:	0e f4       	brtc	.+2      	; 0x1e4 <__addsf3+0x28>
 1e2:	e0 95       	com	r30
 1e4:	e7 fb       	bst	r30, 7
 1e6:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_inf>

000001ea <__addsf3x>:
 1ea:	e9 2f       	mov	r30, r25
 1ec:	0e 94 13 02 	call	0x426	; 0x426 <__fp_split3>
 1f0:	58 f3       	brcs	.-42     	; 0x1c8 <__addsf3+0xc>
 1f2:	ba 17       	cp	r27, r26
 1f4:	62 07       	cpc	r22, r18
 1f6:	73 07       	cpc	r23, r19
 1f8:	84 07       	cpc	r24, r20
 1fa:	95 07       	cpc	r25, r21
 1fc:	20 f0       	brcs	.+8      	; 0x206 <__addsf3x+0x1c>
 1fe:	79 f4       	brne	.+30     	; 0x21e <__addsf3x+0x34>
 200:	a6 f5       	brtc	.+104    	; 0x26a <__addsf3x+0x80>
 202:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_zero>
 206:	0e f4       	brtc	.+2      	; 0x20a <__addsf3x+0x20>
 208:	e0 95       	com	r30
 20a:	0b 2e       	mov	r0, r27
 20c:	ba 2f       	mov	r27, r26
 20e:	a0 2d       	mov	r26, r0
 210:	0b 01       	movw	r0, r22
 212:	b9 01       	movw	r22, r18
 214:	90 01       	movw	r18, r0
 216:	0c 01       	movw	r0, r24
 218:	ca 01       	movw	r24, r20
 21a:	a0 01       	movw	r20, r0
 21c:	11 24       	eor	r1, r1
 21e:	ff 27       	eor	r31, r31
 220:	59 1b       	sub	r21, r25
 222:	99 f0       	breq	.+38     	; 0x24a <__addsf3x+0x60>
 224:	59 3f       	cpi	r21, 0xF9	; 249
 226:	50 f4       	brcc	.+20     	; 0x23c <__addsf3x+0x52>
 228:	50 3e       	cpi	r21, 0xE0	; 224
 22a:	68 f1       	brcs	.+90     	; 0x286 <__addsf3x+0x9c>
 22c:	1a 16       	cp	r1, r26
 22e:	f0 40       	sbci	r31, 0x00	; 0
 230:	a2 2f       	mov	r26, r18
 232:	23 2f       	mov	r18, r19
 234:	34 2f       	mov	r19, r20
 236:	44 27       	eor	r20, r20
 238:	58 5f       	subi	r21, 0xF8	; 248
 23a:	f3 cf       	rjmp	.-26     	; 0x222 <__addsf3x+0x38>
 23c:	46 95       	lsr	r20
 23e:	37 95       	ror	r19
 240:	27 95       	ror	r18
 242:	a7 95       	ror	r26
 244:	f0 40       	sbci	r31, 0x00	; 0
 246:	53 95       	inc	r21
 248:	c9 f7       	brne	.-14     	; 0x23c <__addsf3x+0x52>
 24a:	7e f4       	brtc	.+30     	; 0x26a <__addsf3x+0x80>
 24c:	1f 16       	cp	r1, r31
 24e:	ba 0b       	sbc	r27, r26
 250:	62 0b       	sbc	r22, r18
 252:	73 0b       	sbc	r23, r19
 254:	84 0b       	sbc	r24, r20
 256:	ba f0       	brmi	.+46     	; 0x286 <__addsf3x+0x9c>
 258:	91 50       	subi	r25, 0x01	; 1
 25a:	a1 f0       	breq	.+40     	; 0x284 <__addsf3x+0x9a>
 25c:	ff 0f       	add	r31, r31
 25e:	bb 1f       	adc	r27, r27
 260:	66 1f       	adc	r22, r22
 262:	77 1f       	adc	r23, r23
 264:	88 1f       	adc	r24, r24
 266:	c2 f7       	brpl	.-16     	; 0x258 <__addsf3x+0x6e>
 268:	0e c0       	rjmp	.+28     	; 0x286 <__addsf3x+0x9c>
 26a:	ba 0f       	add	r27, r26
 26c:	62 1f       	adc	r22, r18
 26e:	73 1f       	adc	r23, r19
 270:	84 1f       	adc	r24, r20
 272:	48 f4       	brcc	.+18     	; 0x286 <__addsf3x+0x9c>
 274:	87 95       	ror	r24
 276:	77 95       	ror	r23
 278:	67 95       	ror	r22
 27a:	b7 95       	ror	r27
 27c:	f7 95       	ror	r31
 27e:	9e 3f       	cpi	r25, 0xFE	; 254
 280:	08 f0       	brcs	.+2      	; 0x284 <__addsf3x+0x9a>
 282:	b0 cf       	rjmp	.-160    	; 0x1e4 <__addsf3+0x28>
 284:	93 95       	inc	r25
 286:	88 0f       	add	r24, r24
 288:	08 f0       	brcs	.+2      	; 0x28c <__addsf3x+0xa2>
 28a:	99 27       	eor	r25, r25
 28c:	ee 0f       	add	r30, r30
 28e:	97 95       	ror	r25
 290:	87 95       	ror	r24
 292:	08 95       	ret

00000294 <__divsf3>:
 294:	0e 94 5e 01 	call	0x2bc	; 0x2bc <__divsf3x>
 298:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_round>
 29c:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__fp_pscB>
 2a0:	58 f0       	brcs	.+22     	; 0x2b8 <__divsf3+0x24>
 2a2:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__fp_pscA>
 2a6:	40 f0       	brcs	.+16     	; 0x2b8 <__divsf3+0x24>
 2a8:	29 f4       	brne	.+10     	; 0x2b4 <__divsf3+0x20>
 2aa:	5f 3f       	cpi	r21, 0xFF	; 255
 2ac:	29 f0       	breq	.+10     	; 0x2b8 <__divsf3+0x24>
 2ae:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_inf>
 2b2:	51 11       	cpse	r21, r1
 2b4:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_szero>
 2b8:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__fp_nan>

000002bc <__divsf3x>:
 2bc:	0e 94 13 02 	call	0x426	; 0x426 <__fp_split3>
 2c0:	68 f3       	brcs	.-38     	; 0x29c <__divsf3+0x8>

000002c2 <__divsf3_pse>:
 2c2:	99 23       	and	r25, r25
 2c4:	b1 f3       	breq	.-20     	; 0x2b2 <__divsf3+0x1e>
 2c6:	55 23       	and	r21, r21
 2c8:	91 f3       	breq	.-28     	; 0x2ae <__divsf3+0x1a>
 2ca:	95 1b       	sub	r25, r21
 2cc:	55 0b       	sbc	r21, r21
 2ce:	bb 27       	eor	r27, r27
 2d0:	aa 27       	eor	r26, r26
 2d2:	62 17       	cp	r22, r18
 2d4:	73 07       	cpc	r23, r19
 2d6:	84 07       	cpc	r24, r20
 2d8:	38 f0       	brcs	.+14     	; 0x2e8 <__divsf3_pse+0x26>
 2da:	9f 5f       	subi	r25, 0xFF	; 255
 2dc:	5f 4f       	sbci	r21, 0xFF	; 255
 2de:	22 0f       	add	r18, r18
 2e0:	33 1f       	adc	r19, r19
 2e2:	44 1f       	adc	r20, r20
 2e4:	aa 1f       	adc	r26, r26
 2e6:	a9 f3       	breq	.-22     	; 0x2d2 <__divsf3_pse+0x10>
 2e8:	35 d0       	rcall	.+106    	; 0x354 <__divsf3_pse+0x92>
 2ea:	0e 2e       	mov	r0, r30
 2ec:	3a f0       	brmi	.+14     	; 0x2fc <__divsf3_pse+0x3a>
 2ee:	e0 e8       	ldi	r30, 0x80	; 128
 2f0:	32 d0       	rcall	.+100    	; 0x356 <__divsf3_pse+0x94>
 2f2:	91 50       	subi	r25, 0x01	; 1
 2f4:	50 40       	sbci	r21, 0x00	; 0
 2f6:	e6 95       	lsr	r30
 2f8:	00 1c       	adc	r0, r0
 2fa:	ca f7       	brpl	.-14     	; 0x2ee <__divsf3_pse+0x2c>
 2fc:	2b d0       	rcall	.+86     	; 0x354 <__divsf3_pse+0x92>
 2fe:	fe 2f       	mov	r31, r30
 300:	29 d0       	rcall	.+82     	; 0x354 <__divsf3_pse+0x92>
 302:	66 0f       	add	r22, r22
 304:	77 1f       	adc	r23, r23
 306:	88 1f       	adc	r24, r24
 308:	bb 1f       	adc	r27, r27
 30a:	26 17       	cp	r18, r22
 30c:	37 07       	cpc	r19, r23
 30e:	48 07       	cpc	r20, r24
 310:	ab 07       	cpc	r26, r27
 312:	b0 e8       	ldi	r27, 0x80	; 128
 314:	09 f0       	breq	.+2      	; 0x318 <__divsf3_pse+0x56>
 316:	bb 0b       	sbc	r27, r27
 318:	80 2d       	mov	r24, r0
 31a:	bf 01       	movw	r22, r30
 31c:	ff 27       	eor	r31, r31
 31e:	93 58       	subi	r25, 0x83	; 131
 320:	5f 4f       	sbci	r21, 0xFF	; 255
 322:	3a f0       	brmi	.+14     	; 0x332 <__divsf3_pse+0x70>
 324:	9e 3f       	cpi	r25, 0xFE	; 254
 326:	51 05       	cpc	r21, r1
 328:	78 f0       	brcs	.+30     	; 0x348 <__divsf3_pse+0x86>
 32a:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_inf>
 32e:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_szero>
 332:	5f 3f       	cpi	r21, 0xFF	; 255
 334:	e4 f3       	brlt	.-8      	; 0x32e <__divsf3_pse+0x6c>
 336:	98 3e       	cpi	r25, 0xE8	; 232
 338:	d4 f3       	brlt	.-12     	; 0x32e <__divsf3_pse+0x6c>
 33a:	86 95       	lsr	r24
 33c:	77 95       	ror	r23
 33e:	67 95       	ror	r22
 340:	b7 95       	ror	r27
 342:	f7 95       	ror	r31
 344:	9f 5f       	subi	r25, 0xFF	; 255
 346:	c9 f7       	brne	.-14     	; 0x33a <__divsf3_pse+0x78>
 348:	88 0f       	add	r24, r24
 34a:	91 1d       	adc	r25, r1
 34c:	96 95       	lsr	r25
 34e:	87 95       	ror	r24
 350:	97 f9       	bld	r25, 7
 352:	08 95       	ret
 354:	e1 e0       	ldi	r30, 0x01	; 1
 356:	66 0f       	add	r22, r22
 358:	77 1f       	adc	r23, r23
 35a:	88 1f       	adc	r24, r24
 35c:	bb 1f       	adc	r27, r27
 35e:	62 17       	cp	r22, r18
 360:	73 07       	cpc	r23, r19
 362:	84 07       	cpc	r24, r20
 364:	ba 07       	cpc	r27, r26
 366:	20 f0       	brcs	.+8      	; 0x370 <__divsf3_pse+0xae>
 368:	62 1b       	sub	r22, r18
 36a:	73 0b       	sbc	r23, r19
 36c:	84 0b       	sbc	r24, r20
 36e:	ba 0b       	sbc	r27, r26
 370:	ee 1f       	adc	r30, r30
 372:	88 f7       	brcc	.-30     	; 0x356 <__divsf3_pse+0x94>
 374:	e0 95       	com	r30
 376:	08 95       	ret

00000378 <__fixunssfsi>:
 378:	0e 94 1b 02 	call	0x436	; 0x436 <__fp_splitA>
 37c:	88 f0       	brcs	.+34     	; 0x3a0 <__fixunssfsi+0x28>
 37e:	9f 57       	subi	r25, 0x7F	; 127
 380:	98 f0       	brcs	.+38     	; 0x3a8 <__fixunssfsi+0x30>
 382:	b9 2f       	mov	r27, r25
 384:	99 27       	eor	r25, r25
 386:	b7 51       	subi	r27, 0x17	; 23
 388:	b0 f0       	brcs	.+44     	; 0x3b6 <__fixunssfsi+0x3e>
 38a:	e1 f0       	breq	.+56     	; 0x3c4 <__fixunssfsi+0x4c>
 38c:	66 0f       	add	r22, r22
 38e:	77 1f       	adc	r23, r23
 390:	88 1f       	adc	r24, r24
 392:	99 1f       	adc	r25, r25
 394:	1a f0       	brmi	.+6      	; 0x39c <__fixunssfsi+0x24>
 396:	ba 95       	dec	r27
 398:	c9 f7       	brne	.-14     	; 0x38c <__fixunssfsi+0x14>
 39a:	14 c0       	rjmp	.+40     	; 0x3c4 <__fixunssfsi+0x4c>
 39c:	b1 30       	cpi	r27, 0x01	; 1
 39e:	91 f0       	breq	.+36     	; 0x3c4 <__fixunssfsi+0x4c>
 3a0:	0e 94 35 02 	call	0x46a	; 0x46a <__fp_zero>
 3a4:	b1 e0       	ldi	r27, 0x01	; 1
 3a6:	08 95       	ret
 3a8:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_zero>
 3ac:	67 2f       	mov	r22, r23
 3ae:	78 2f       	mov	r23, r24
 3b0:	88 27       	eor	r24, r24
 3b2:	b8 5f       	subi	r27, 0xF8	; 248
 3b4:	39 f0       	breq	.+14     	; 0x3c4 <__fixunssfsi+0x4c>
 3b6:	b9 3f       	cpi	r27, 0xF9	; 249
 3b8:	cc f3       	brlt	.-14     	; 0x3ac <__fixunssfsi+0x34>
 3ba:	86 95       	lsr	r24
 3bc:	77 95       	ror	r23
 3be:	67 95       	ror	r22
 3c0:	b3 95       	inc	r27
 3c2:	d9 f7       	brne	.-10     	; 0x3ba <__fixunssfsi+0x42>
 3c4:	3e f4       	brtc	.+14     	; 0x3d4 <__fixunssfsi+0x5c>
 3c6:	90 95       	com	r25
 3c8:	80 95       	com	r24
 3ca:	70 95       	com	r23
 3cc:	61 95       	neg	r22
 3ce:	7f 4f       	sbci	r23, 0xFF	; 255
 3d0:	8f 4f       	sbci	r24, 0xFF	; 255
 3d2:	9f 4f       	sbci	r25, 0xFF	; 255
 3d4:	08 95       	ret

000003d6 <__fp_inf>:
 3d6:	97 f9       	bld	r25, 7
 3d8:	9f 67       	ori	r25, 0x7F	; 127
 3da:	80 e8       	ldi	r24, 0x80	; 128
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	60 e0       	ldi	r22, 0x00	; 0
 3e0:	08 95       	ret

000003e2 <__fp_nan>:
 3e2:	9f ef       	ldi	r25, 0xFF	; 255
 3e4:	80 ec       	ldi	r24, 0xC0	; 192
 3e6:	08 95       	ret

000003e8 <__fp_pscA>:
 3e8:	00 24       	eor	r0, r0
 3ea:	0a 94       	dec	r0
 3ec:	16 16       	cp	r1, r22
 3ee:	17 06       	cpc	r1, r23
 3f0:	18 06       	cpc	r1, r24
 3f2:	09 06       	cpc	r0, r25
 3f4:	08 95       	ret

000003f6 <__fp_pscB>:
 3f6:	00 24       	eor	r0, r0
 3f8:	0a 94       	dec	r0
 3fa:	12 16       	cp	r1, r18
 3fc:	13 06       	cpc	r1, r19
 3fe:	14 06       	cpc	r1, r20
 400:	05 06       	cpc	r0, r21
 402:	08 95       	ret

00000404 <__fp_round>:
 404:	09 2e       	mov	r0, r25
 406:	03 94       	inc	r0
 408:	00 0c       	add	r0, r0
 40a:	11 f4       	brne	.+4      	; 0x410 <__fp_round+0xc>
 40c:	88 23       	and	r24, r24
 40e:	52 f0       	brmi	.+20     	; 0x424 <__fp_round+0x20>
 410:	bb 0f       	add	r27, r27
 412:	40 f4       	brcc	.+16     	; 0x424 <__fp_round+0x20>
 414:	bf 2b       	or	r27, r31
 416:	11 f4       	brne	.+4      	; 0x41c <__fp_round+0x18>
 418:	60 ff       	sbrs	r22, 0
 41a:	04 c0       	rjmp	.+8      	; 0x424 <__fp_round+0x20>
 41c:	6f 5f       	subi	r22, 0xFF	; 255
 41e:	7f 4f       	sbci	r23, 0xFF	; 255
 420:	8f 4f       	sbci	r24, 0xFF	; 255
 422:	9f 4f       	sbci	r25, 0xFF	; 255
 424:	08 95       	ret

00000426 <__fp_split3>:
 426:	57 fd       	sbrc	r21, 7
 428:	90 58       	subi	r25, 0x80	; 128
 42a:	44 0f       	add	r20, r20
 42c:	55 1f       	adc	r21, r21
 42e:	59 f0       	breq	.+22     	; 0x446 <__fp_splitA+0x10>
 430:	5f 3f       	cpi	r21, 0xFF	; 255
 432:	71 f0       	breq	.+28     	; 0x450 <__fp_splitA+0x1a>
 434:	47 95       	ror	r20

00000436 <__fp_splitA>:
 436:	88 0f       	add	r24, r24
 438:	97 fb       	bst	r25, 7
 43a:	99 1f       	adc	r25, r25
 43c:	61 f0       	breq	.+24     	; 0x456 <__fp_splitA+0x20>
 43e:	9f 3f       	cpi	r25, 0xFF	; 255
 440:	79 f0       	breq	.+30     	; 0x460 <__fp_splitA+0x2a>
 442:	87 95       	ror	r24
 444:	08 95       	ret
 446:	12 16       	cp	r1, r18
 448:	13 06       	cpc	r1, r19
 44a:	14 06       	cpc	r1, r20
 44c:	55 1f       	adc	r21, r21
 44e:	f2 cf       	rjmp	.-28     	; 0x434 <__fp_split3+0xe>
 450:	46 95       	lsr	r20
 452:	f1 df       	rcall	.-30     	; 0x436 <__fp_splitA>
 454:	08 c0       	rjmp	.+16     	; 0x466 <__fp_splitA+0x30>
 456:	16 16       	cp	r1, r22
 458:	17 06       	cpc	r1, r23
 45a:	18 06       	cpc	r1, r24
 45c:	99 1f       	adc	r25, r25
 45e:	f1 cf       	rjmp	.-30     	; 0x442 <__fp_splitA+0xc>
 460:	86 95       	lsr	r24
 462:	71 05       	cpc	r23, r1
 464:	61 05       	cpc	r22, r1
 466:	08 94       	sec
 468:	08 95       	ret

0000046a <__fp_zero>:
 46a:	e8 94       	clt

0000046c <__fp_szero>:
 46c:	bb 27       	eor	r27, r27
 46e:	66 27       	eor	r22, r22
 470:	77 27       	eor	r23, r23
 472:	cb 01       	movw	r24, r22
 474:	97 f9       	bld	r25, 7
 476:	08 95       	ret

00000478 <__gesf2>:
 478:	0e 94 ae 02 	call	0x55c	; 0x55c <__fp_cmp>
 47c:	08 f4       	brcc	.+2      	; 0x480 <__gesf2+0x8>
 47e:	8f ef       	ldi	r24, 0xFF	; 255
 480:	08 95       	ret

00000482 <__mulsf3>:
 482:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__mulsf3x>
 486:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_round>
 48a:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__fp_pscA>
 48e:	38 f0       	brcs	.+14     	; 0x49e <__mulsf3+0x1c>
 490:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__fp_pscB>
 494:	20 f0       	brcs	.+8      	; 0x49e <__mulsf3+0x1c>
 496:	95 23       	and	r25, r21
 498:	11 f0       	breq	.+4      	; 0x49e <__mulsf3+0x1c>
 49a:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_inf>
 49e:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__fp_nan>
 4a2:	11 24       	eor	r1, r1
 4a4:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_szero>

000004a8 <__mulsf3x>:
 4a8:	0e 94 13 02 	call	0x426	; 0x426 <__fp_split3>
 4ac:	70 f3       	brcs	.-36     	; 0x48a <__mulsf3+0x8>

000004ae <__mulsf3_pse>:
 4ae:	95 9f       	mul	r25, r21
 4b0:	c1 f3       	breq	.-16     	; 0x4a2 <__mulsf3+0x20>
 4b2:	95 0f       	add	r25, r21
 4b4:	50 e0       	ldi	r21, 0x00	; 0
 4b6:	55 1f       	adc	r21, r21
 4b8:	62 9f       	mul	r22, r18
 4ba:	f0 01       	movw	r30, r0
 4bc:	72 9f       	mul	r23, r18
 4be:	bb 27       	eor	r27, r27
 4c0:	f0 0d       	add	r31, r0
 4c2:	b1 1d       	adc	r27, r1
 4c4:	63 9f       	mul	r22, r19
 4c6:	aa 27       	eor	r26, r26
 4c8:	f0 0d       	add	r31, r0
 4ca:	b1 1d       	adc	r27, r1
 4cc:	aa 1f       	adc	r26, r26
 4ce:	64 9f       	mul	r22, r20
 4d0:	66 27       	eor	r22, r22
 4d2:	b0 0d       	add	r27, r0
 4d4:	a1 1d       	adc	r26, r1
 4d6:	66 1f       	adc	r22, r22
 4d8:	82 9f       	mul	r24, r18
 4da:	22 27       	eor	r18, r18
 4dc:	b0 0d       	add	r27, r0
 4de:	a1 1d       	adc	r26, r1
 4e0:	62 1f       	adc	r22, r18
 4e2:	73 9f       	mul	r23, r19
 4e4:	b0 0d       	add	r27, r0
 4e6:	a1 1d       	adc	r26, r1
 4e8:	62 1f       	adc	r22, r18
 4ea:	83 9f       	mul	r24, r19
 4ec:	a0 0d       	add	r26, r0
 4ee:	61 1d       	adc	r22, r1
 4f0:	22 1f       	adc	r18, r18
 4f2:	74 9f       	mul	r23, r20
 4f4:	33 27       	eor	r19, r19
 4f6:	a0 0d       	add	r26, r0
 4f8:	61 1d       	adc	r22, r1
 4fa:	23 1f       	adc	r18, r19
 4fc:	84 9f       	mul	r24, r20
 4fe:	60 0d       	add	r22, r0
 500:	21 1d       	adc	r18, r1
 502:	82 2f       	mov	r24, r18
 504:	76 2f       	mov	r23, r22
 506:	6a 2f       	mov	r22, r26
 508:	11 24       	eor	r1, r1
 50a:	9f 57       	subi	r25, 0x7F	; 127
 50c:	50 40       	sbci	r21, 0x00	; 0
 50e:	9a f0       	brmi	.+38     	; 0x536 <__mulsf3_pse+0x88>
 510:	f1 f0       	breq	.+60     	; 0x54e <__mulsf3_pse+0xa0>
 512:	88 23       	and	r24, r24
 514:	4a f0       	brmi	.+18     	; 0x528 <__mulsf3_pse+0x7a>
 516:	ee 0f       	add	r30, r30
 518:	ff 1f       	adc	r31, r31
 51a:	bb 1f       	adc	r27, r27
 51c:	66 1f       	adc	r22, r22
 51e:	77 1f       	adc	r23, r23
 520:	88 1f       	adc	r24, r24
 522:	91 50       	subi	r25, 0x01	; 1
 524:	50 40       	sbci	r21, 0x00	; 0
 526:	a9 f7       	brne	.-22     	; 0x512 <__mulsf3_pse+0x64>
 528:	9e 3f       	cpi	r25, 0xFE	; 254
 52a:	51 05       	cpc	r21, r1
 52c:	80 f0       	brcs	.+32     	; 0x54e <__mulsf3_pse+0xa0>
 52e:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_inf>
 532:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_szero>
 536:	5f 3f       	cpi	r21, 0xFF	; 255
 538:	e4 f3       	brlt	.-8      	; 0x532 <__mulsf3_pse+0x84>
 53a:	98 3e       	cpi	r25, 0xE8	; 232
 53c:	d4 f3       	brlt	.-12     	; 0x532 <__mulsf3_pse+0x84>
 53e:	86 95       	lsr	r24
 540:	77 95       	ror	r23
 542:	67 95       	ror	r22
 544:	b7 95       	ror	r27
 546:	f7 95       	ror	r31
 548:	e7 95       	ror	r30
 54a:	9f 5f       	subi	r25, 0xFF	; 255
 54c:	c1 f7       	brne	.-16     	; 0x53e <__mulsf3_pse+0x90>
 54e:	fe 2b       	or	r31, r30
 550:	88 0f       	add	r24, r24
 552:	91 1d       	adc	r25, r1
 554:	96 95       	lsr	r25
 556:	87 95       	ror	r24
 558:	97 f9       	bld	r25, 7
 55a:	08 95       	ret

0000055c <__fp_cmp>:
 55c:	99 0f       	add	r25, r25
 55e:	00 08       	sbc	r0, r0
 560:	55 0f       	add	r21, r21
 562:	aa 0b       	sbc	r26, r26
 564:	e0 e8       	ldi	r30, 0x80	; 128
 566:	fe ef       	ldi	r31, 0xFE	; 254
 568:	16 16       	cp	r1, r22
 56a:	17 06       	cpc	r1, r23
 56c:	e8 07       	cpc	r30, r24
 56e:	f9 07       	cpc	r31, r25
 570:	c0 f0       	brcs	.+48     	; 0x5a2 <__fp_cmp+0x46>
 572:	12 16       	cp	r1, r18
 574:	13 06       	cpc	r1, r19
 576:	e4 07       	cpc	r30, r20
 578:	f5 07       	cpc	r31, r21
 57a:	98 f0       	brcs	.+38     	; 0x5a2 <__fp_cmp+0x46>
 57c:	62 1b       	sub	r22, r18
 57e:	73 0b       	sbc	r23, r19
 580:	84 0b       	sbc	r24, r20
 582:	95 0b       	sbc	r25, r21
 584:	39 f4       	brne	.+14     	; 0x594 <__fp_cmp+0x38>
 586:	0a 26       	eor	r0, r26
 588:	61 f0       	breq	.+24     	; 0x5a2 <__fp_cmp+0x46>
 58a:	23 2b       	or	r18, r19
 58c:	24 2b       	or	r18, r20
 58e:	25 2b       	or	r18, r21
 590:	21 f4       	brne	.+8      	; 0x59a <__fp_cmp+0x3e>
 592:	08 95       	ret
 594:	0a 26       	eor	r0, r26
 596:	09 f4       	brne	.+2      	; 0x59a <__fp_cmp+0x3e>
 598:	a1 40       	sbci	r26, 0x01	; 1
 59a:	a6 95       	lsr	r26
 59c:	8f ef       	ldi	r24, 0xFF	; 255
 59e:	81 1d       	adc	r24, r1
 5a0:	81 1d       	adc	r24, r1
 5a2:	08 95       	ret

000005a4 <_exit>:
 5a4:	f8 94       	cli

000005a6 <__stop_program>:
 5a6:	ff cf       	rjmp	.-2      	; 0x5a6 <__stop_program>
